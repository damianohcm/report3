
                            <!-- begin: column header popover -->
                            <div class="pull-right" ng-if="!c.locked">
                                <div ng-if="!c.isChild" ng-init="c=c" 
                                    uib-popover-template="colHeaderPopover.templateUrl" 
                                    popover-trigger="'outsideClick'"
                                    popover-placement="{{c.groupPosition < visibleColumns(c.isGroup).length ? 'right' : 'left'}}">
                                    <a type="button">
                                        <i class="fa fa-chevron-circle-up"></i>
                                    </a>
                                </div>

                                <a ng-if="c.isChild" ng-show="displayHideChildCol(c)" ng-click="hideCol(c)"><i class="fa fa-minus-circle"></i></a>
                            </div>
                            <!-- end: column header popover -->





                        <div ng-if="c.position === 0">
                            <!-- begin: row header popover -->
                            <div class="th-top" ng-if="c.position === 0">
                                <i class="fa fa-spinner fa-spin fa-3x fa-fw" ng-show="!!row.expanding"></i>

                                <span ng-init="c=c" 
                                    uib-popover-template="colHeaderPopover.templateUrl" 
                                    popover-trigger="'outsideClick'"
                                    popover-placement="right">
                                    <a type="button">
                                        <i class="fa fa-chevron-circle-up"></i>
                                    </a>
                                </span>
                                <a ng-show="displayHideRow()" ng-click="hideRow(row)"><i class="fa fa-minus-circle"></i></a>
                            </div>
                            <!-- end: row header popover -->
                            <div class="th-middle">
                                <div class="th-middle-inner">
                                    <div class="th-text" ng-click="onRowCellClick(c, row)">
                                        {{row[c.key].value}}{{row[c.key].suffix}}
                                    </div>
                                </div>
                            </div>
                        </div>


                        @media (min-width: 1200px) {
  .container {
    width: 1350px;
    max-width: 1350px; } }

@media (max-width: 992px) {
  .container {
    width: 970px; } }

@media (max-width: 768px) {
  .container {
    width: 750px; } }


74 Baskin-Robbins
75 Dunkin' Donuts
76 Dunkin' Donuts/Baskin-Robbins Combo




// var mappedLos = reportConfigStrategy.oneLevel 
// 	? [] 
// 	: _.filter((seg.los || seg.learning_objects), function(lo) {
// 		return (lo.item_type || lo.type || '').toLowerCase() !== 'curriculum';
// 	});
// var mappedLos = _.filter((seg.los || seg.learning_objects), function(lo) {
// 		return (lo.item_type || lo.type || '').toLowerCase() !== 'curriculum';
// 	});


var segs = _.map(dataToFix.segments, function(item) {
				return item.id + '	' + item.name	+ '	' + (item.item_type || item.type);
			}).join('\n');
			//console.log('segs', segs);

			var los = _.map(dataToFix.segments, function(seg) {
				return _.map(seg.los, function(lo) {
					return '"' + lo.id + '"\t' + seg.id + '\t' + lo.name	+ '\t' + (lo.item_type || lo.type);
				}).join('\n');
			}).join('\n');
			console.log('los', los);

			debugger;






$scope.colHeaderStyle = function(col) {
    // get total visible columns
    var totColumns;
    if ($scope.topLevelColumn && ['category', 'summary'].indexOf(col.key) === -1) {
        totColumns = $scope.visibleColumns(col).length;
    } else {
        totColumns = $scope.visibleGroupColumns().length;
    }

    totColumns += 1;
    totColumns = totColumns < 3 ? 3 : totColumns;

    var storeWidthPercent = 10, summaryWidthPercent = 5;
    var useFixedWidth = totColumns > 10;
    var styleObj = {
    };

    if (col.key === 'category') {
        styleObj.width = '200px'; //useFixedWidth ? '200px' : storeWidthPercent + '%';
        styleObj['min-width'] = styleObj.width;
    } else if (col.key === 'summary') {
        styleObj.width = '130px'; //useFixedWidth ? '130px' : summaryWidthPercent + '%';
        styleObj['min-width'] = styleObj.width;
    } else {
        if (useFixedWidth) {
            styleObj.width = '130px';
        } else {
            var availableWidthInPercent = 100 - storeWidthPercent - summaryWidthPercent; // this is 100 minus PC and Summary widths
            styleObj.width = Math.round(availableWidthInPercent / totColumns) + '%';
        }

        if (useFixedWidth) {
            styleObj['min-width'] = styleObj.width;
        }
    }
    
    return styleObj;
};